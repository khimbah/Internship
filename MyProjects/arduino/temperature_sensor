// I used an arduino uno v3 here
//

// LCD stuff
#include <LiquidCrystal_I2C.h>

// Include the libraries we need
#include <OneWire.h>
#include <DallasTemperature.h>


// Data wire is plugged into port 2 on the Arduino
#define ONE_WIRE_BUS 2
// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);
// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);
int RED_LED = 8;
int YELLOW_LED = 9;
LiquidCrystal_I2C lcd(0x27, 2, 1, 0, 4, 5, 6, 7, 3, POSITIVE);  // Set the LCD I2C address

void setup(void)
{
  // start serial port
  Serial.begin(9600);
  Serial.println("Dallas Temperature IC Control Library Demo");
  pinMode(RED_LED, OUTPUT);
  pinMode(YELLOW_LED, OUTPUT);
  // Start up the library
  sensors.begin();

  lcd.begin(16,2);   // initialize the lcd for 16 chars 2 lines, turn on backlight

  // ------- Quick 3 blinks of backlight  -------------
  for(int i = 0; i< 3; i++)
  {
    lcd.backlight();
    delay(250);
    lcd.noBacklight();
    delay(250);
  }
  lcd.backlight(); // finish with backlight on  
  lcd.setCursor(0,0); //Start at character 4 on line 0
  lcd.print("Hello, world!");
}

void loop(void)
{ 
  sensors.requestTemperatures(); // Send the command to get temperatures
  float temp = sensors.getTempCByIndex(0);
  lcd.clear();
  lcd.print(temp);
  Serial.println(temp);
  if ( temp > 30.0 )
  {
    lcd.backlight();
    digitalWrite(RED_LED, HIGH);   // turn the LED on (HIGH is the voltage level)
    digitalWrite(YELLOW_LED, LOW);   // turn the LED off (LOW is the voltage level) 
  }
  else if (temp == 30.00)
   {
    digitalWrite(RED_LED, HIGH);   // turn the LED off (LOW is the voltage level) 
    digitalWrite(YELLOW_LED, HIGH);   // turn the LED on (HIGH is the voltage level)
  }
  else
  {
    lcd.noBacklight();
    digitalWrite(RED_LED, LOW);   // turn the LED off (LOW is the voltage level) 
    digitalWrite(YELLOW_LED, HIGH);   // turn the LED on (HIGH is the voltage level)
  }
  delay(1000);
}
